{"filter":false,"title":"main.tf","tooltip":"/terraform-docker/container/main.tf","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":37,"column":0},"action":"insert","lines":["resource \"random_string\" \"random\" {","  count   = var.count_in","  length  = 4","  special = false","  upper   = false","}","","resource \"docker_container\" \"app_container\" {","  count = var.count_in","  name  = join(\"-\", [var.name_in, terraform.workspace, random_string.random[count.index].result])","  image = var.image_in","  ports {","    internal = var.int_port_in","    external = var.ext_port_in[count.index]","  }","  dynamic \"volumes\" {","    for_each = var.volumes_in","    content {","      container_path = volumes.value[\"container_path_each\"]","      volume_name    = module.volume[count.index].volume_output[volumes.key]","    }","  }","  provisioner \"local-exec\" {","    command = \"echo ${self.name}: ${self.ip_address}:${join(\"\", [for x in self.ports[*][\"external\"] : x])} >> test.txt\"","  }","  provisioner \"local-exec\" {","    when    = destroy","    command = \"rm -f test.txt\"","  }","}","","module \"volume\" {","  source       = \"./volume\"","  count        = var.count_in","  volume_count = length(var.volumes_in)","  volume_name  = \"${var.name_in}-${terraform.workspace}-${random_string.random[count.index].result}-volume\"","}",""],"id":1}]]},"ace":{"folds":[],"scrolltop":14,"scrollleft":0,"selection":{"start":{"row":37,"column":0},"end":{"row":37,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":0,"state":"start","mode":"ace/mode/terraform"}},"timestamp":1661312608698,"hash":"35ae7d29129727af7c92423d49fdae8af07adb7c"}